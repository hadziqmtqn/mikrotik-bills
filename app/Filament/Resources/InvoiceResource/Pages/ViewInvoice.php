<?php

namespace App\Filament\Resources\InvoiceResource\Pages;

use App\Enums\AccountType;
use App\Enums\PackageTypeService;
use App\Filament\Resources\InvoiceResource;
use App\Filament\Resources\UserResource;
use App\Models\Invoice;
use Filament\Infolists\Components\Group;
use Filament\Infolists\Components\RepeatableEntry;
use Filament\Infolists\Components\Section;
use Filament\Infolists\Components\TextEntry;
use Filament\Infolists\Infolist;
use Filament\Resources\Pages\ViewRecord;

class ViewInvoice extends ViewRecord
{
    protected static string $resource = InvoiceResource::class;

    public function infolist(Infolist $infolist): Infolist
    {
        parent::infolist($infolist); // TODO: Change the autogenerated stub

        return $infolist
            ->columns(3)
            ->schema([
                Group::make()
                    ->columnSpan(['lg' => 2])
                    ->schema([
                        Section::make('Data Pelanggan')
                            ->inlineLabel()
                            ->schema([
                                TextEntry::make('user.name')
                                    ->label('Nama')
                                    ->color('primary')
                                    ->url(fn(Invoice $record): string => UserResource::getUrl('view', ['record' => $record->user?->username])),

                                TextEntry::make('user.userProfile.account_type')
                                    ->label('Tipe')
                                    ->formatStateUsing(fn($state): string => AccountType::tryFrom($state)?->getLabel() ?? '-'),

                                TextEntry::make('user.userProfile.place_name')
                                    ->label('Tempat Usaha'),

                                TextEntry::make('user.userProfile.whatsapp_number')
                                    ->label('No. WhatsApp'),
                            ]),

                        Section::make('Items')
                            ->schema([
                                RepeatableEntry::make('invoiceItems')
                                    ->hiddenLabel()
                                    ->schema([
                                        TextEntry::make('customerService.reference_number')
                                            ->label('No. Referensi')
                                            ->inlineLabel(),

                                        TextEntry::make('customerService.servicePackage.package_name')
                                            ->label('Paket Layanan')
                                            ->inlineLabel(),

                                        TextEntry::make('customerService.package_type')
                                            ->label('Tipe Paket')
                                            ->inlineLabel()
                                            ->formatStateUsing(fn($state): string => PackageTypeService::tryFrom($state)?->getLabel() ?? '-'),
                                    ])
                            ])
                    ]),

                Group::make()
                    ->columnSpan(['lg' => 1]),
            ]);
    }
}
