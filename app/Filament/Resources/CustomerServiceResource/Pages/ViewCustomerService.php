<?php

namespace App\Filament\Resources\CustomerServiceResource\Pages;

use App\Enums\AccountType;
use App\Enums\PackageTypeService;
use App\Enums\ServiceType;
use App\Enums\StatusData;
use App\Filament\Resources\CustomerServiceResource;
use App\Filament\Resources\ServicePackageResource\Pages\ViewServicePackage;
use App\Filament\Resources\UserResource\Pages\ViewUser;
use App\Helpers\DateHelper;
use App\Models\CustomerService;
use Filament\Infolists\Components\Group;
use Filament\Infolists\Components\Section;
use Filament\Infolists\Components\TextEntry;
use Filament\Infolists\Infolist;
use Filament\Resources\Pages\ViewRecord;
use Filament\Support\Enums\FontWeight;
use Filament\Support\Enums\IconPosition;

class ViewCustomerService extends ViewRecord
{
    protected static string $resource = CustomerServiceResource::class;
    protected static ?string $title = 'Detail';

    public function infolist(Infolist $infolist): Infolist
    {
        parent::infolist($infolist); // TODO: Change the autogenerated stub

        return $infolist
            ->columns(3)
            ->schema([
                Group::make()
                    ->schema([
                        Section::make('Data Pelanggan')
                            ->inlineLabel()
                            ->schema([
                                TextEntry::make('user.name')
                                    ->label('Nama Pelanggan')
                                    ->color('primary')
                                    ->icon('heroicon-o-arrow-top-right-on-square')
                                    ->iconPosition(IconPosition::After)
                                    ->url(fn(CustomerService $record): string => ViewUser::getUrl(['record' => $record->user?->username])),

                                TextEntry::make('user.userProfile.account_type')
                                    ->label('Tipe')
                                    ->formatStateUsing(fn($state): string => AccountType::tryFrom($state)?->getLabel() ?? '-'),

                                TextEntry::make('user.userProfile.place_name')
                                    ->label('Tempat Usaha'),

                                TextEntry::make('user.userProfile.whatsapp_number')
                                    ->label('No. WhatsApp'),
                            ]),

                        Section::make('Detail Paket')
                            ->inlineLabel()
                            ->schema([
                                TextEntry::make('servicePackage.code')
                                    ->label('Kode Referensi')
                                    ->color('primary')
                                    ->icon('heroicon-o-arrow-top-right-on-square')
                                    ->iconPosition(IconPosition::After)
                                    ->url(fn(CustomerService $record): string => ViewServicePackage::getUrl(['record' => $record->servicePackage?->slug])),

                                TextEntry::make('reference_number')
                                    ->label('Nomor Referensi'),

                                TextEntry::make('servicePackage.service_type')
                                    ->label('Jenis Layanan')
                                    ->formatStateUsing(fn($state): string => ServiceType::tryFrom($state)?->getLabel() ?? '-'),

                                TextEntry::make('servicePackage.package_name')
                                    ->label('Paket'),

                                TextEntry::make('package_type')
                                    ->label('Jenis Paket')
                                    ->formatStateUsing(fn($state): string => PackageTypeService::tryFrom($state)?->getLabel() ?? '-'),

                                TextEntry::make('servicePackage.package_limit_type')
                                    ->label('Tipe Batas Paket')
                                    ->visible(fn(CustomerService $record): bool => $record->servicePackage?->service_type === 'hotspot'),

                                TextEntry::make('servicePackage.limit_value')
                                    ->label('Nilai Batasan')
                                    ->visible(fn(CustomerService $record): bool => $record->servicePackage?->service_type === 'hotspot' && $record->servicePackage?->package_limit_type !== 'unlimited'),

                                TextEntry::make('servicePackage.validity_period')
                                    ->label('Periode')
                                    ->formatStateUsing(fn(CustomerService $record): string => $record->servicePackage?->validity_period . ' ' . $record->servicePackage?->validity_unit)
                                    ->visible(fn(CustomerService $record): bool => $record->servicePackage?->service_type === 'pppoe'),

                                TextEntry::make('price')
                                    ->label('Harga')
                                    ->money('idr')
                                    ->weight(FontWeight::Bold)
                            ]),
                    ])
                    ->columnSpan(['lg' => 2]),

                Group::make()
                    ->schema([
                        Section::make()
                            ->schema([
                                TextEntry::make('status')
                                    ->formatStateUsing(fn($state): string => StatusData::tryFrom($state)?->getLabel() ?? '-')
                                    ->color(fn($state): string => StatusData::tryFrom($state)?->getColor() ?? 'gray')
                                    ->size(TextEntry\TextEntrySize::Large)
                                    ->weight(FontWeight::Bold),

                                TextEntry::make('start_date')
                                    ->label('Tanggal Mulai Aktif')
                                    ->formatStateUsing(fn($state): string => $state ? DateHelper::indonesiaDate($state, 'D MMM Y HH:mm') : '-'),
                            ]),
                    ])
                    ->columnSpan(['lg' => 1]),
            ]);
    }
}
